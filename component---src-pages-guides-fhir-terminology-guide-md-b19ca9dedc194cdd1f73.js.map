{"version":3,"sources":["webpack:///./src/pages/guides/FHIRTerminologyGuide.md","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__","_extends","mdxType","id","parentName","href","className","isMDXComponent","PageHeader","_cx","title","_ref$tabs","tabs","core_browser_esm","cx","pageHeader","withTabs","length","text","EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","subDirectory","row","link","PageTabs","render","_this$props","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","replace","key","selectedItem","listItem","gatsby_browser_entry","to","tabsContainer","list","React","Component","Default","pageContext","children","location","_pageContext$frontmat","frontmatter","titleType","theme","description","keywords","pathPrefix","_2216853253","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","components_PageHeader","label","components_PageTabs","Main","padded","components_EditLink","NextPrevious","BackToTopBtn"],"mappings":"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","file":"component---src-pages-guides-fhir-terminology-guide-md-b19ca9dedc194cdd1f73.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/paulbastide/git/wffh/tmp/prb112/FHIR/docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`The IBM FHIR Server Terminology module (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR/tree/master/fhir-term\"\n      }}>{`fhir-term`}</a>{`) provides a FHIR terminology service provider interface (SPI) and a default implementation that implements terminology services using `}<inlineCode parentName=\"p\">{`ConceptMap`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`ValueSet`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`ConceptMap`}</inlineCode>{` resources that have been made available through the FHIR registry module (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR/tree/master/fhir-registry\"\n      }}>{`fhir-registry`}</a>{`).`}</p>\n    <h2 {...{\n      \"id\": \"fhir-terminology-service-provider-interface-spi\"\n    }}>{`FHIR Terminology Service Provider Interface (SPI)`}</h2>\n    <p>{`The FHIR Terminology Service Provider interface provides a mechanism for implementers to provide terminology capabilities via the Java ServiceLoader. The interface includes method signatures for `}<inlineCode parentName=\"p\">{`expand`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`lookup`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`subsumes`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`closure`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`validateCode`}</inlineCode>{` (CodeSystem) and `}<inlineCode parentName=\"p\">{`validateCode`}</inlineCode>{` (ValueSet). Here is an excerpt (for brevity) of the SPI:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public interface FHIRTermServiceProvider {\n    boolean isExpandable(ValueSet valueSet);\n    ValueSet expand(ValueSet valueSet, ExpansionParameters parameters);\n    LookupOutcome lookup(Coding coding, LookupParameters parameters);\n    ConceptSubsumptionOutcome subsumes(Coding codingA, Coding codingB);\n    Set<Concept> closure(Coding coding);\n    ValidationOutcome validateCode(CodeSystem codeSystem, Coding coding, ValidationParameters parameters);\n    ValidationOutcome validateCode(CodeSystem codeSystem, CodeableConcept codeableConcept, ValidationParameters parameters);\n    ValidationOutcome validateCode(ValueSet valueSet, Coding coding, ValidationParameters parameters);\n    ValidationOutcome validateCode(ValueSet valueSet, CodeableConcept codeableConcept, ValidationParameters parameters);\n    TranslationOutcome translate(ConceptMap conceptMap, Coding coding, TranslationParameters parameters);\n    TranslationOutcome translate(ConceptMap conceptMap, CodeableConcept codeableConcept, TranslationParameters parameters);\n}\n\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`expand `}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`lookup`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`validateCode`}</inlineCode>{` (CodeSystem), `}<inlineCode parentName=\"p\">{`validateCode`}</inlineCode>{` (ValueSet), and `}<inlineCode parentName=\"p\">{`translate`}</inlineCode>{` methods support the passing of optional parameters (e.g. `}<inlineCode parentName=\"p\">{`ExpansionParameters`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`LookupParameters`}</inlineCode>{`, etc.). Many of the methods also return an “outcome” object. These “parameter” and “outcome” objects are modeled after the input/output parameters specified in the terminology operations from the FHIR Terminology module: `}<a parentName=\"p\" {...{\n        \"href\": \"http://hl7.org/fhir/terminology-module.html\"\n      }}>{`http://hl7.org/fhir/terminology-module.html`}</a>{`.`}</p>\n    <p>{`The “parameter” objects can be created from a `}<inlineCode parentName=\"p\">{`Parameters`}</inlineCode>{` resource:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Parameters parameters = ...;\nExpansionParameters expansionParameters = ExpansionParameters.from(parameters);\n`}</code></pre>\n    <p>{`The “outcome” objects can be converted to a Parameters resource:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`LookupOutcome outcome = ...;\nParameters parameters = outcome.toParameters();\n`}</code></pre>\n    <p>{`This bridge to/from the `}<inlineCode parentName=\"p\">{`Parameters`}</inlineCode>{` resource enables implementers to build both native implementations of the SPI and implementations that access an existing external terminology service.`}</p>\n    <h2 {...{\n      \"id\": \"default-terminology-service-provider-implementation\"\n    }}>{`Default Terminology Service Provider Implementation`}</h2>\n    <p>{`The default implementation of `}<inlineCode parentName=\"p\">{`FHIRTermServiceProvider`}</inlineCode>{` (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR/blob/master/fhir-term/src/main/java/com/ibm/fhir/term/service/provider/DefaultTermServiceProvider.java\"\n      }}>{`DefaultTermServiceProvider`}</a>{`) leverages terminology resources (`}<inlineCode parentName=\"p\">{`CodeSystem`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`ValueSet`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`ConceptMap`}</inlineCode>{`) that have been made available through the FHIR registry module (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR/tree/master/fhir-registry\"\n      }}>{`fhir-registry`}</a>{`). It supports `}<inlineCode parentName=\"p\">{`CodeSystem`}</inlineCode>{` resources with `}<em parentName=\"p\">{`complete`}</em>{` content (`}<inlineCode parentName=\"p\">{`CodeSystem.content = 'complete'`}</inlineCode>{`) and `}<inlineCode parentName=\"p\">{`ValueSet`}</inlineCode>{` resources that reference `}<inlineCode parentName=\"p\">{`CodeSystem`}</inlineCode>{` resources that have complete content. The default implementation does not support for optional parameters (e.g. `}<inlineCode parentName=\"p\">{`ExpansionParameters`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`TranslationParameters`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`ValidationParameters`}</inlineCode>{`, etc.).`}</p>\n    <h2 {...{\n      \"id\": \"fhir-terminology-service-singleton-facade\"\n    }}>{`FHIR Terminology Service Singleton facade`}</h2>\n    <p>{`The FHIR Terminology Service Singleton facade (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR/blob/master/fhir-term/src/main/java/com/ibm/fhir/term/service/FHIRTermService.java\"\n      }}>{`FHIRTermService`}</a>{`) loads a `}<inlineCode parentName=\"p\">{`FHIRTermServiceProvider`}</inlineCode>{` from the ServiceLoader, if one exists. Otherwise, it will instantiate a `}<inlineCode parentName=\"p\">{`DefaultTermServiceProvider`}</inlineCode>{`. Other FHIR server components and user code (Java) that requires terminology capabilities should access them via the `}<inlineCode parentName=\"p\">{`FHIRTermService`}</inlineCode>{` singleton facade. Here is an example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`ValueSet valueSet = ValueSetSupport.getValueSet(\"http://ibm.com/fhir/ValueSet/vs1\");\nCoding coding = Coding.builder()\n        .system(Uri.of(\"http://ibm.com/fhir/CodeSystem/cs1\"))\n        .version(string(\"1.0.0\"))\n        .code(Code.of(\"a\")\n        .display(string(\"concept a\")\n        .build();\nValidationOutcome outcome = FHIRTermService.getInstance().validateCode(valueSet, coding);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"fhir-server-terminology-extended-operations\"\n    }}>{`FHIR Server Terminology Extended Operations`}</h2>\n    <p>{`The FHIR terminology operations module (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR/tree/master/fhir-operation-term\"\n      }}>{`fhir-operation-term`}</a>{`) connects the FHIR Server REST layer to the FHIR terminology module via the operations framework. This module implements the terminology operations as defined in the FHIR terminology service specification `}<a parentName=\"p\" {...{\n        \"href\": \"http://hl7.org/fhir/terminology-service.html\"\n      }}>{`http://hl7.org/fhir/terminology-service.html`}</a>{`. One exception is the `}<inlineCode parentName=\"p\">{`$closure`}</inlineCode>{` operation. The `}<inlineCode parentName=\"p\">{`$closure`}</inlineCode>{` operation is experimental and does not support versioning or replay. This means that the `}<inlineCode parentName=\"p\">{`$closure`}</inlineCode>{` operation will always return the set of closure table entries for the given input concepts and does not store client state.`}</p>\n    <h2 {...{\n      \"id\": \"fhirpath-terminology-functions\"\n    }}>{`FHIRPath Terminology Functions`}</h2>\n    <p>{`The FHIRPath module (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR/tree/master/fhir-path\"\n      }}>{`fhir-path`}</a>{`) has been updated to support implementations of the draft FHIRPath terminology function specification: `}<a parentName=\"p\" {...{\n        \"href\": \"http://hl7.org/fhir/fhirpath.html#txapi\"\n      }}>{`http://hl7.org/fhir/fhirpath.html#txapi`}</a>{`. Support for the following functions (accessed through the `}<inlineCode parentName=\"p\">{`%terminologies`}</inlineCode>{` constant) has been implemented:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`%terminologies.expand(valueSet, params) : ValueSet\n%terminologies.lookup(coded, params) : Parameters\n%terminologies.validateVS(valueSet, coded, params) : Parameters\n%terminologies.validateCS(codeSystem, coded, params) : Parameters\n%terminologies.subsumes(system, coded1, coded2, params) : code\n%terminologies.translate(conceptMap, code, params) : Parameters\n`}</code></pre>\n    <p>{`Here is the same example from above but going through the FHIRPath evaluator:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Coding coding = Coding.builder()\n        .system(Uri.of(\"http://ibm.com/fhir/CodeSystem/cs1\"))\n        .version(string(\"1.0.0\"))\n        .code(Code.of(\"a\")\n        .display(string(\"concept a\")\n        .build();\nCollection<FHIRPathNode> initialContext = singleton(FHIRPathElementNode.elementNode(coding));\nFHIRPathEvaluator evaluator = FHIRPathEvaluator.evaluator();\nCollection<FHIRPathNode> result = evaluator.evaluate(\"%terminologies.validateCode('http://ibm.com/fhir/ValueSet/vs1', %context)\");\n\n`}</code></pre>\n    <p>{`Additionally, the FHIRPath functions `}<inlineCode parentName=\"p\">{`subsumedBy`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`subsumes`}</inlineCode>{` have been implemented per: `}<a parentName=\"p\" {...{\n        \"href\": \"http://hl7.org/fhir/fhirpath.html#functions\"\n      }}>{`http://hl7.org/fhir/fhirpath.html#functions`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}