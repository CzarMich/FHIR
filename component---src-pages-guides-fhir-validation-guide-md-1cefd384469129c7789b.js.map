{"version":3,"sources":["webpack:///./src/pages/guides/FHIRValidationGuide.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__","_extends","mdxType","parentName","href","className","src","alt","isMDXComponent"],"mappings":"6bAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,sIACFC,CAAAH,EAAA,gBACD,OAAOI,OAAAC,EAAA,EAAAD,CAACP,EAADS,EAAA,GAAeV,EAAiBM,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAG5EH,OAAAC,EAAA,EAAAD,CAAA,sBACAA,OAAAC,EAAA,EAAAD,CAAA,mDAA8CA,OAAAC,EAAA,EAAAD,CAAA,IAAAE,EAAA,CAAGE,WAAW,KAAQ,CAChEC,KAAQ,4DADkC,mBAA9C,wMAGAL,OAAAC,EAAA,EAAAD,CAAA,WAAKA,OAAAC,EAAA,EAAAD,CAAA,OAAAE,EAAA,CAAME,WAAW,OAAU,CAC5BE,UAAa,kBADZ,wSAULN,OAAAC,EAAA,EAAAD,CAAA,iKAA4JA,OAAAC,EAAA,EAAAD,CAAA,IAAAE,EAAA,CAAGE,WAAW,KAAQ,CAC9KC,KAAQ,sDADgJ,aAA5J,mDAE0EL,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,SAF1E,gKAGAJ,OAAAC,EAAA,EAAAD,CAAA,MAAS,CACPO,IAAO,8DACPC,IAAO,gEAETR,OAAAC,EAAA,EAAAD,CAAA,6BACAA,OAAAC,EAAA,EAAAD,CAAA,0HAAqHA,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,yBAArH,0GAAiSJ,OAAAC,EAAA,EAAAD,CAAA,IAAAE,EAAA,CAAGE,WAAW,KAAQ,CACnTC,KAAQ,0DADqR,iBAAjS,iBAGAL,OAAAC,EAAA,EAAAD,CAAA,yGAAoGA,OAAAC,EAAA,EAAAD,CAAA,IAAAE,EAAA,CAAGE,WAAW,KAAQ,CACtHC,KAAQ,yDADwF,gBAApG,mIAGAL,OAAAC,EAAA,EAAAD,CAAA,UACEA,OAAAC,EAAA,EAAAD,CAAA,MAAII,WAAW,MAAf,8DACAJ,OAAAC,EAAA,EAAAD,CAAA,MAAII,WAAW,MAAf,qDACAJ,OAAAC,EAAA,EAAAD,CAAA,MAAII,WAAW,MAAf,yEACAJ,OAAAC,EAAA,EAAAD,CAAA,MAAII,WAAW,MAAf,yEACAJ,OAAAC,EAAA,EAAAD,CAAA,MAAII,WAAW,MAAf,mCAAwDJ,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,MAAvB,cAAxD,cACAJ,OAAAC,EAAA,EAAAD,CAAA,MAAII,WAAW,MAAf,oCAAyDJ,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,MAAvB,YAAzD,cACAJ,OAAAC,EAAA,EAAAD,CAAA,MAAII,WAAW,MAAf,qCAA0DJ,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,MAAvB,MAA1D,eAEFJ,OAAAC,EAAA,EAAAD,CAAA,oDAA+CA,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,UAA/C,OAAyGJ,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,WAAzG,YACAJ,OAAAC,EAAA,EAAAD,CAAA,kJACAA,OAAAC,EAAA,EAAAD,CAAA,WAAKA,OAAAC,EAAA,EAAAD,CAAA,OAAAE,EAAA,CAAME,WAAW,OAAU,CAC5BE,UAAa,kBADZ,0OAaLN,OAAAC,EAAA,EAAAD,CAAA,WAAKA,OAAAC,EAAA,EAAAD,CAAA,OAAAE,EAAA,CAAME,WAAW,OAAU,CAC5BE,UAAa,kBADZ,gOAaLN,OAAAC,EAAA,EAAAD,CAAA,qGACAA,OAAAC,EAAA,EAAAD,CAAA,WAAKA,OAAAC,EAAA,EAAAD,CAAA,OAAAE,EAAA,CAAME,WAAW,OAAU,IAA3B,mGAELJ,OAAAC,EAAA,EAAAD,CAAA,uHACAA,OAAAC,EAAA,EAAAD,CAAA,WAAKA,OAAAC,EAAA,EAAAD,CAAA,OAAAE,EAAA,CAAME,WAAW,OAAU,CAC5BE,UAAa,kBADZ,mPAaLN,OAAAC,EAAA,EAAAD,CAAA,oGACAA,OAAAC,EAAA,EAAAD,CAAA,WAAKA,OAAAC,EAAA,EAAAD,CAAA,OAAAE,EAAA,CAAME,WAAW,OAAU,IAA3B,oCAELJ,OAAAC,EAAA,EAAAD,CAAA,qEACAA,OAAAC,EAAA,EAAAD,CAAA,WAAKA,OAAAC,EAAA,EAAAD,CAAA,OAAAE,EAAA,CAAME,WAAW,OAAU,IAA3B,mSAELJ,OAAAC,EAAA,EAAAD,CAAA,qDAAgDA,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,2BAAhD,oCACAJ,OAAAC,EAAA,EAAAD,CAAA,oDAA+CA,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,mDAA/C,wPACAJ,OAAAC,EAAA,EAAAD,CAAA,qFACAA,OAAAC,EAAA,EAAAD,CAAA,qPACAA,OAAAC,EAAA,EAAAD,CAAA,WAAKA,OAAAC,EAAA,EAAAD,CAAA,OAAAE,EAAA,CAAME,WAAW,OAAU,CAC5BE,UAAa,kBADZ,ooEA4DLN,OAAAC,EAAA,EAAAD,CAAA,0HACFA,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,4EADE,6GAEAJ,OAAAC,EAAA,EAAAD,CAAA,wCACAA,OAAAC,EAAA,EAAAD,CAAA,iDAA4CA,OAAAC,EAAA,EAAAD,CAAA,IAAAE,EAAA,CAAGE,WAAW,KAAQ,CAC9DC,KAAQ,0DADgC,iBAA5C,4LAEuNL,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,uBAFvN,mJAE0aJ,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,oBAF1a,mDAE0hBJ,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,gDAC1hBJ,OAAAC,EAAA,EAAAD,CAAA,MAAS,CACPO,IAAO,wDACPC,IAAO,0DAETR,OAAAC,EAAA,EAAAD,CAAA,sEAAiEA,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,gCAAjE,WAAqJJ,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,mCAArJ,+BAAgQJ,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,0BAAhQ,+CACAJ,OAAAC,EAAA,EAAAD,CAAA,WAAKA,OAAAC,EAAA,EAAAD,CAAA,OAAAE,EAAA,CAAME,WAAW,OAAU,CAC5BE,UAAa,kBADZ,qLASLN,OAAAC,EAAA,EAAAD,CAAA,gBAAWA,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,oCAAX,iHAAyMJ,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,eAAzM,SAA0QJ,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,mCAA1Q,kBAAwWJ,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,wBAAxW,8EAAufJ,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,2BAAvf,0BAAqlBJ,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,wBAArlB,gRACAJ,OAAAC,EAAA,EAAAD,CAAA,8CAAyCA,OAAAC,EAAA,EAAAD,CAAA,IAAAE,EAAA,CAAGE,WAAW,KAAQ,CAC3DC,KAAQ,sEAD6B,sEAGzCL,OAAAC,EAAA,EAAAD,CAAA,sCACAA,OAAAC,EAAA,EAAAD,CAAA,wEACAA,OAAAC,EAAA,EAAAD,CAAA,UACEA,OAAAC,EAAA,EAAAD,CAAA,MAAII,WAAW,MAAf,0FAA+GJ,OAAAC,EAAA,EAAAD,CAAA,IAAAE,EAAA,CAAGE,WAAW,MAAS,CAClIC,KAAQ,yCADmG,yCAG/GL,OAAAC,EAAA,EAAAD,CAAA,MAAII,WAAW,MAAf,sDAA2EJ,OAAAC,EAAA,EAAAD,CAAA,IAAAE,EAAA,CAAGE,WAAW,MAAS,CAC9FC,KAAQ,gDAD+D,gDAG3EL,OAAAC,EAAA,EAAAD,CAAA,MAAII,WAAW,MAAf,kEAAuFJ,OAAAC,EAAA,EAAAD,CAAA,IAAAE,EAAA,CAAGE,WAAW,MAAS,CAC1GC,KAAQ,6CAD2E,6CAGvFL,OAAAC,EAAA,EAAAD,CAAA,MAAII,WAAW,MAAf,4HAAiJJ,OAAAC,EAAA,EAAAD,CAAA,IAAAE,EAAA,CAAGE,WAAW,MAAS,CACpKC,KAAQ,uCADqI,uCAGjJL,OAAAC,EAAA,EAAAD,CAAA,MAAII,WAAW,MAAf,4FAAiHJ,OAAAC,EAAA,EAAAD,CAAA,IAAAE,EAAA,CAAGE,WAAW,MAAS,CACpIC,KAAQ,oEADqG,qEAInHL,OAAAC,EAAA,EAAAD,CAAA,qDACAA,OAAAC,EAAA,EAAAD,CAAA,4OAAuOA,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,yBAAvO,kBAA2TJ,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,KAAvB,WAA3T,0CACAJ,OAAAC,EAAA,EAAAD,CAAA,oDAA+CA,OAAAC,EAAA,EAAAD,CAAA,cAAYI,WAAW,MAAvB,YAA/C,cACAJ,OAAAC,EAAA,EAAAD,CAAA,6TAAwTA,OAAAC,EAAA,EAAAD,CAAA,IAAAE,EAAA,CAAGE,WAAW,KAAQ,CAC1UC,KAAQ,gDAD4S,uBAAxT,gGAOJV,EAAWc,gBAAiB","file":"component---src-pages-guides-fhir-validation-guide-md-1cefd384469129c7789b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/paulbastide/git/wffh/tmp/prb112/FHIR/docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Overview`}</h2>\n    <p>{`The IBM FHIR Server Validation module (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR/tree/master/fhir-validation\"\n      }}>{`fhir-validation`}</a>{`) provides Java APIs for validating FHIR resources using constraints specified in their corresponding structure definitions. For example, in the Patient resource, we have the following constraint:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@Constraint(\n    id = \"pat-1\",\n    level = \"Rule\",\n    location = \"Patient.contact\",\n    description = \"SHALL at least contain a contact's details or a reference to an organization\",\n    expression = \"name.exists() or telecom.exists() or address.exists() or organization.exists()\"\n)\n`}</code></pre>\n    <p>{`The validation component picks up the Java annotation, pulls out the FHIRPath expression and passes it on to the IBM FHIR Server FHIRPath component (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR/tree/master/fhir-path\"\n      }}>{`fhir-path`}</a>{`) for evaluation. If the invariant evaluates to `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{` then the FHIR validator will generate an OperationOutcome.Issue with the severity set relative to the “level” of the constraint (i.e. “Rule” or “Warning”);`}</p>\n    <img {...{\n      \"src\": \"https://ibm.github.io/FHIR/images/fhir-dependency-graph.png\",\n      \"alt\": \"https://ibm.github.io/FHIR/images/fhir-dependency-graph.png\"\n    }}></img>\n    <h2>{`Profile Support`}</h2>\n    <p>{`The validation component will also validate a resource against profiles that it asserts conformance to in the `}<inlineCode parentName=\"p\">{`Resource.meta.profile`}</inlineCode>{` element assuming those profiles are available to the IBM FHIR Server via the FHIR registry component (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR/tree/master/fhir-registry\"\n      }}>{`fhir-registry`}</a>{`) at runtime.`}</p>\n    <p>{`Given a FHIR profile (structure definition) as input, the IBM FHIR Server Profile component (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR/tree/master/fhir-profile\"\n      }}>{`fhir-profile`}</a>{`) generates FHIRPath expressions for a number of different types of constraints. The current scope of constraint generation is:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Cardinality constraints (required and prohibited elements)`}</li>\n      <li parentName=\"ul\">{`Fixed value constraints (Code and Uri data types)`}</li>\n      <li parentName=\"ul\">{`Pattern value constraints (CodeableConcept and Identifier data types)`}</li>\n      <li parentName=\"ul\">{`Reference type constraints (FHIRPath resolve/is/conformsTo functions)`}</li>\n      <li parentName=\"ul\">{`Extension constraints (FHIRPath `}<inlineCode parentName=\"li\">{`conformsTo`}</inlineCode>{` function)`}</li>\n      <li parentName=\"ul\">{`Vocabulary constraints (FHIRPath `}<inlineCode parentName=\"li\">{`memberOf`}</inlineCode>{` function)`}</li>\n      <li parentName=\"ul\">{`Choice type constraints (FHIRPath `}<inlineCode parentName=\"li\">{`as`}</inlineCode>{` function)`}</li>\n    </ul>\n    <p>{`NOTE: there is currently no support for `}<inlineCode parentName=\"p\">{`closed`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`ordered`}</inlineCode>{` slices.`}</p>\n    <p>{`For example, the HL7 bodyweight profile has the following cardinality and fixed value constraints (some details removed for brevity):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"id\": \"Observation.code.coding:BodyWeightCode.system\",\n    \"path\": \"Observation.code.coding.system\",\n    \"min\": 1,\n    \"max\": \"1\",\n    \"type\": [{\n        \"code\": \"uri\"\n    }],\n    \"fixedUri\": \"http://loinc.org\"\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"id\": \"Observation.code.coding:BodyWeightCode.code\",\n    \"path\": \"Observation.code.coding.code\",\n    \"min\": 1,\n    \"max\": \"1\",\n    \"type\": [{\n        \"code\": \"code\"\n    }],\n    \"fixedCode\": \"29463-7\",\n}\n`}</code></pre>\n    <p>{`which are used by the ConstraintGenerator to generate the following FHIRPath expression:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`code.where(coding.where(system = 'http://loinc.org' and code = '29463-7').exists()).exists()\n`}</code></pre>\n    <p>{`The HL7 bodyweight profile has the following reference type constraint (some details removed for brevity):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"id\": \"Observation.subject\",\n    \"path\": \"Observation.subject\",\n    \"type\": [{\n        \"code\": \"Reference\",\n        \"targetProfile\": [\n            \"http://hl7.org/fhir/StructureDefinition/Patient\"\n        ]\n    }]      \n}\n`}</code></pre>\n    <p>{`which is used by the ConstraintGenerator to generate the following FHIRPath expression:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`subject.resolve().is(Patient)\n`}</code></pre>\n    <p>{`Complex reference types are also supported, for example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`derivedFrom.exists() implies (derivedFrom.all(resolve().is(DocumentReference) or resolve().is(ImagingStudy) or resolve().is(Media) or resolve().is(QuestionnaireResponse) or resolve().is(MolecularSequence) or resolve().conformsTo('http://hl7.org/fhir/StructureDefinition/vitalsigns')))\n`}</code></pre>\n    <p>{`is generated from the element definition `}<inlineCode parentName=\"p\">{`Observation.derivedFrom`}</inlineCode>{` in the same bodyweight profile.`}</p>\n    <p>{`FHIRPath based constraints specified in `}<inlineCode parentName=\"p\">{`StructureDefinition.snapshot.element.constraint`}</inlineCode>{` elements, will also be evaluated during profile validation. All of the constraints generated for a given profile are cached in memory so that they can be reused to validate multiple resources that are asserting conformance to the same profile.`}</p>\n    <h3>{`Making profiles available to the FHIR registry component (FHIRRegistry)`}</h3>\n    <p>{`The FHIR registry component keeps track of definitional resource types (e.g. StructureDefinition, ValueSet, CodeSystem, etc.). It uses the Java ServiceLoader to look for implementations of the FHIRRegistryResourceProvider interface:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public interface FHIRRegistryResourceProvider {\n    /**\n     * Get the registry resource from this provider for the given resource type, url and version\n     *\n     * <p>If the version is null, then the latest version of the registry resource is returned (if available)\n     *\n     * @param resourceType\n     *     the resource type of the registry resource\n     * @param url\n     *     the url of the registry resource\n     * @param version\n     *     the version of the registry resource (optional)\n     * @return\n     *     the registry resource from this provider for the given resource type, url and version if exists, null otherwise\n     */\n    FHIRRegistryResource getRegistryResource(Class<? extends Resource> resourceType, String url, String version);\n\n    /**\n     * Get the registry resources from this provider for the given resource type\n     *\n     * @param resourceType\n     *     the resource type of the registry resource\n     * @return\n     *     the registry resources from this provider for the given resource type\n     */\n    Collection<FHIRRegistryResource> getRegistryResources(Class<? extends Resource> resourceType);\n\n    /**\n     * Get all the registry resources from this provider\n     *\n     * @return\n     *     all of the registry resources from this provider\n     */\n    Collection<FHIRRegistryResource> getRegistryResources();\n\n    /**\n     * Get the profile resources from this provider that constrain the given resource type\n     *\n     * @param type\n     *     the constrained resource type\n     * @return\n     *     the profile resources from this provider that constrain the given resource type\n     */\n    Collection<FHIRRegistryResource> getProfileResources(String type);\n\n\n    /**\n     * Get the search parameter resources from this provider with the given search parameter type\n     * (e.g. string, token, etc.)\n     *\n     * @param type\n     *     the search parameter type\n     * @return\n     *     the search parameter resources from this provider with the given search parameter type\n     */\n    Collection<FHIRRegistryResource> getSearchParameterResources(String type);\n}\n`}</code></pre>\n    <p>{`Package your implementation in a jar file and be sure to include its fully-qualified classname in your jar’s\n`}<inlineCode parentName=\"p\">{`META-INF/services/com.ibm.fhir.registry.spi.FHIRRegistryResourceProvider`}</inlineCode>{`, then drop this jar in the server’s userlib directory to make it available to the server during startup.`}</p>\n    <h3>{`NPM package format support`}</h3>\n    <p>{`The IBM FHIR Server Registry module (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR/tree/master/fhir-registry\"\n      }}>{`fhir-registry`}</a>{`) has utilities that can be used to expose FHIR registry resources that exist in the NPM package format. Implementation guides that follow this packaging format can be dropped into the `}<inlineCode parentName=\"p\">{`src/main/resources/`}</inlineCode>{` under a directory structure defined by the ImplementationGuide.packageId value. For example, US Core implementation guide has a package id of: `}<inlineCode parentName=\"p\">{`hl7.fhir.us.core`}</inlineCode>{`. The NPM “package” folder can be dropped here: `}<inlineCode parentName=\"p\">{`src/main/resources/hl7/fhir/us/core/package`}</inlineCode></p>\n    <img {...{\n      \"src\": \"https://ibm.github.io/FHIR/images/us-core-package.png\",\n      \"alt\": \"https://ibm.github.io/FHIR/images/us-core-package.png\"\n    }}></img>\n    <p>{`For convenience, we have created a base implementation of `}<inlineCode parentName=\"p\">{`FHIRRegistryResourceProvider`}</inlineCode>{` called `}<inlineCode parentName=\"p\">{`PackageRegistryResourceProvider`}</inlineCode>{`. The implementation of the `}<inlineCode parentName=\"p\">{`USCoreResourceProvider`}</inlineCode>{` using this implementation looks like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class USCoreResourceProvider extends PackageRegistryResourceProvider {\n    @Override\n    public String getPackageId() {\n        return \"hl7.fhir.us.core\";\n    }\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`PackgageRegistryResourceProvider`}</inlineCode>{` class converts the packageId (e.g. hl7.fhir.us.core) to a path where it can find the NPM package index file: `}<inlineCode parentName=\"p\">{`.index.json`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`PackageRegistryResourceProvider`}</inlineCode>{` class creates `}<inlineCode parentName=\"p\">{`FHIRRegistryResource`}</inlineCode>{` instances, using the index file, and caches them in a map on startup. The `}<inlineCode parentName=\"p\">{`PackageRegistryResource`}</inlineCode>{` (an implementation of `}<inlineCode parentName=\"p\">{`FHIRRegistryResource`}</inlineCode>{` class lazily loads the underlying FHIR resource into memory when it is accessed. Multiple versions of the same resource can be registered. FHIR registry resource providers can be bundled into a jar file and deployed with the IBM FHIR server in the user lib directory.`}</p>\n    <p>{`For more information, please see: `}<a parentName=\"p\" {...{\n        \"href\": \"https://confluence.hl7.org/display/FHIR/NPM+Package+Specification\"\n      }}>{`https://confluence.hl7.org/display/FHIR/NPM+Package+Specification`}</a></p>\n    <h3>{`Built-in profile support`}</h3>\n    <p>{`The IBM FHIR server has built-in support for the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Profiles defined in the base FHIR Specification (v4.0.1: R4 - Mixed Normative and STU) `}<a parentName=\"li\" {...{\n          \"href\": \"http://hl7.org/fhir/profilelist.html\"\n        }}>{`http://hl7.org/fhir/profilelist.html`}</a></li>\n      <li parentName=\"ul\">{`US Core Implementation Guide (v3.1.0: STU3 Update) `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.hl7.org/fhir/us/core/index.html\"\n        }}>{`https://www.hl7.org/fhir/us/core/index.html`}</a></li>\n      <li parentName=\"ul\">{`CARIN Blue Button Implementation Guide (v0.1.0: STU1 Ballot 1) `}<a parentName=\"li\" {...{\n          \"href\": \"http://hl7.org/fhir/us/carin-bb/2020Feb/\"\n        }}>{`http://hl7.org/fhir/us/carin-bb/2020Feb/`}</a></li>\n      <li parentName=\"ul\">{`HL7 FHIR Implementation Guide: minimal Common Oncology Data Elements (mCODE) Release 1 - US Realm | STU1 (v1.0.0: STU 1) `}<a parentName=\"li\" {...{\n          \"href\": \"http://hl7.org/fhir/us/mcode/STU1/\"\n        }}>{`http://hl7.org/fhir/us/mcode/STU1/`}</a></li>\n      <li parentName=\"ul\">{`DaVinci Payer Data Exchange (PDEX) Plan Net Implementation Guide (v0.1.0: STU1 Ballot 1) `}<a parentName=\"li\" {...{\n          \"href\": \"http://hl7.org/fhir/us/davinci-pdex-plan-net/2020Feb/index.html\"\n        }}>{`http://hl7.org/fhir/us/davinci-pdex-plan-net/2020Feb/index.html`}</a></li>\n    </ul>\n    <h2>{`The IBM FHIR Server $validate operation`}</h2>\n    <p>{`The IBM FHIR Server provides a basic implementation of the $validate operation that invokes the FHIRValidator via a REST API. The $validate operation will validate against the base specification and any profiles asserted in `}<inlineCode parentName=\"p\">{`Resource.meta.profile`}</inlineCode>{`. The optional `}<inlineCode parentName=\"p\">{`profile`}</inlineCode>{` parameter is not currently supported.`}</p>\n    <h2>{`ValueSet membership checking (FHIRPath `}<inlineCode parentName=\"h2\">{`memberOf`}</inlineCode>{` function)`}</h2>\n    <p>{`Coded elements (code, Coding, CodeableConcept data types), maybe have a binding element that specifies a ValueSet that that element is bound to. This means that the coded element must have a value that comes from that value set. The FHIR profile component will expand value sets according to the ValueSet `}<a parentName=\"p\" {...{\n        \"href\": \"http://hl7.org/fhir/valueset.html#expansion\"\n      }}>{`expansion algorithm`}</a>{` for ValueSets that include CodeSystem resources available via the FHIR registry component.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}