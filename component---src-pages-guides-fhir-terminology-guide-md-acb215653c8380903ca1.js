(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{372:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",function(){return i}),a.d(t,"default",function(){return m});a(9),a(6),a(7),a(4),a(8),a(0);var n=a(107),r=a(395);a(1);function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}var i={},l={_frontmatter:i},p=r.a;function m(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,["components"]);return Object(n.b)(p,o({},l,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h2",null,"Overview"),Object(n.b)("p",null,"The IBM FHIR Server Terminology module (",Object(n.b)("a",o({parentName:"p"},{href:"https://github.com/IBM/FHIR/tree/master/fhir-term"}),"fhir-term"),") provides a FHIR terminology service provider interface (SPI) and a default implementation that implements terminology services using ",Object(n.b)("inlineCode",{parentName:"p"},"ConceptMap"),", ",Object(n.b)("inlineCode",{parentName:"p"},"ValueSet"),", and ",Object(n.b)("inlineCode",{parentName:"p"},"ConceptMap")," resources that have been made available through the FHIR registry module (",Object(n.b)("a",o({parentName:"p"},{href:"https://github.com/IBM/FHIR/tree/master/fhir-registry"}),"fhir-registry"),")."),Object(n.b)("h2",null,"FHIR Terminology Service Provider Interface (SPI)"),Object(n.b)("p",null,"The FHIR Terminology Service Provider interface provides a mechanism for implementers to provide terminology capabilities via the Java ServiceLoader. The interface includes method signatures for ",Object(n.b)("inlineCode",{parentName:"p"},"expand"),", ",Object(n.b)("inlineCode",{parentName:"p"},"lookup"),", ",Object(n.b)("inlineCode",{parentName:"p"},"subsumes"),", ",Object(n.b)("inlineCode",{parentName:"p"},"closure"),", ",Object(n.b)("inlineCode",{parentName:"p"},"validateCode")," (CodeSystem) and ",Object(n.b)("inlineCode",{parentName:"p"},"validateCode")," (ValueSet). Here is an excerpt (for brevity) of the SPI:"),Object(n.b)("pre",null,Object(n.b)("code",o({parentName:"pre"},{className:"language-java"}),"public interface FHIRTermServiceProvider {\n    boolean isExpandable(ValueSet valueSet);\n    ValueSet expand(ValueSet valueSet, ExpansionParameters parameters);\n    LookupOutcome lookup(Coding coding, LookupParameters parameters);\n    ConceptSubsumptionOutcome subsumes(Coding codingA, Coding codingB);\n    Set<Concept> closure(Coding coding);\n    ValidationOutcome validateCode(CodeSystem codeSystem, Coding coding, ValidationParameters parameters);\n    ValidationOutcome validateCode(CodeSystem codeSystem, CodeableConcept codeableConcept, ValidationParameters parameters);\n    ValidationOutcome validateCode(ValueSet valueSet, Coding coding, ValidationParameters parameters);\n    ValidationOutcome validateCode(ValueSet valueSet, CodeableConcept codeableConcept, ValidationParameters parameters);\n    TranslationOutcome translate(ConceptMap conceptMap, Coding coding, TranslationParameters parameters);\n    TranslationOutcome translate(ConceptMap conceptMap, CodeableConcept codeableConcept, TranslationParameters parameters);\n}\n\n")),Object(n.b)("p",null,"The ",Object(n.b)("inlineCode",{parentName:"p"},"expand "),", ",Object(n.b)("inlineCode",{parentName:"p"},"lookup"),", ",Object(n.b)("inlineCode",{parentName:"p"},"validateCode")," (CodeSystem), ",Object(n.b)("inlineCode",{parentName:"p"},"validateCode")," (ValueSet), and ",Object(n.b)("inlineCode",{parentName:"p"},"translate")," methods support the passing of optional parameters (e.g. ",Object(n.b)("inlineCode",{parentName:"p"},"ExpansionParameters"),", ",Object(n.b)("inlineCode",{parentName:"p"},"LookupParameters"),", etc.). Many of the methods also return an “outcome” object. These “parameter” and “outcome” objects are modeled after the input/output parameters specified in the terminology operations from the FHIR Terminology module: ",Object(n.b)("a",o({parentName:"p"},{href:"http://hl7.org/fhir/terminology-module.html"}),"http://hl7.org/fhir/terminology-module.html"),"."),Object(n.b)("p",null,"The “parameter” objects can be created from a ",Object(n.b)("inlineCode",{parentName:"p"},"Parameters")," resource:"),Object(n.b)("pre",null,Object(n.b)("code",o({parentName:"pre"},{className:"language-java"}),"Parameters parameters = ...;\nExpansionParameters expansionParameters = ExpansionParameters.from(parameters);\n")),Object(n.b)("p",null,"The “outcome” objects can be converted to a Parameters resource:"),Object(n.b)("pre",null,Object(n.b)("code",o({parentName:"pre"},{className:"language-java"}),"LookupOutcome outcome = ...;\nParameters parameters = outcome.toParameters();\n")),Object(n.b)("p",null,"This bridge to/from the ",Object(n.b)("inlineCode",{parentName:"p"},"Parameters")," resource enables implementers to build both native implementations of the SPI and implementations that access an existing external terminology service."),Object(n.b)("h2",null,"Default Terminology Service Provider Implementation"),Object(n.b)("p",null,"The default implementation of ",Object(n.b)("inlineCode",{parentName:"p"},"FHIRTermServiceProvider")," (",Object(n.b)("a",o({parentName:"p"},{href:"https://github.com/IBM/FHIR/blob/master/fhir-term/src/main/java/com/ibm/fhir/term/service/provider/DefaultTermServiceProvider.java"}),"DefaultTermServiceProvider"),") leverages terminology resources (",Object(n.b)("inlineCode",{parentName:"p"},"CodeSystem"),", ",Object(n.b)("inlineCode",{parentName:"p"},"ValueSet"),", and ",Object(n.b)("inlineCode",{parentName:"p"},"ConceptMap"),") that have been made available through the FHIR registry module (",Object(n.b)("a",o({parentName:"p"},{href:"https://github.com/IBM/FHIR/tree/master/fhir-registry"}),"fhir-registry"),"). It supports ",Object(n.b)("inlineCode",{parentName:"p"},"CodeSystem")," resources with ",Object(n.b)("em",{parentName:"p"},"complete")," content (",Object(n.b)("inlineCode",{parentName:"p"},"CodeSystem.content = 'complete'"),") and ",Object(n.b)("inlineCode",{parentName:"p"},"ValueSet")," resources that reference ",Object(n.b)("inlineCode",{parentName:"p"},"CodeSystem")," resources that have complete content. The default implementation does not support for optional parameters (e.g. ",Object(n.b)("inlineCode",{parentName:"p"},"ExpansionParameters"),", ",Object(n.b)("inlineCode",{parentName:"p"},"TranslationParameters"),", ",Object(n.b)("inlineCode",{parentName:"p"},"ValidationParameters"),", etc.)."),Object(n.b)("h2",null,"FHIR Terminology Service Singleton facade"),Object(n.b)("p",null,"The FHIR Terminology Service Singleton facade (",Object(n.b)("a",o({parentName:"p"},{href:"https://github.com/IBM/FHIR/blob/master/fhir-term/src/main/java/com/ibm/fhir/term/service/FHIRTermService.java"}),"FHIRTermService"),") loads a ",Object(n.b)("inlineCode",{parentName:"p"},"FHIRTermServiceProvider")," from the ServiceLoader, if one exists. Otherwise, it will instantiate a ",Object(n.b)("inlineCode",{parentName:"p"},"DefaultTermServiceProvider"),". Other FHIR server components and user code (Java) that requires terminology capabilities should access them via the ",Object(n.b)("inlineCode",{parentName:"p"},"FHIRTermService")," singleton facade. Here is an example:"),Object(n.b)("pre",null,Object(n.b)("code",o({parentName:"pre"},{className:"language-java"}),'ValueSet valueSet = ValueSetSupport.getValueSet("http://ibm.com/fhir/ValueSet/vs1");\nCoding coding = Coding.builder()\n        .system(Uri.of("http://ibm.com/fhir/CodeSystem/cs1"))\n        .version(string("1.0.0"))\n        .code(Code.of("a")\n        .display(string("concept a")\n        .build();\nValidationOutcome outcome = FHIRTermService.getInstance().validateCode(valueSet, coding);\n')),Object(n.b)("h2",null,"FHIR Server Terminology Extended Operations"),Object(n.b)("p",null,"The FHIR terminology operations module (",Object(n.b)("a",o({parentName:"p"},{href:"https://github.com/IBM/FHIR/tree/master/fhir-operation-term"}),"fhir-operation-term"),") connects the FHIR Server REST layer to the FHIR terminology module via the operations framework. This module implements the terminology operations as defined in the FHIR terminology service specification ",Object(n.b)("a",o({parentName:"p"},{href:"http://hl7.org/fhir/terminology-service.html"}),"http://hl7.org/fhir/terminology-service.html"),". One exception is the ",Object(n.b)("inlineCode",{parentName:"p"},"$closure")," operation. The ",Object(n.b)("inlineCode",{parentName:"p"},"$closure")," operation is experimental and does not support versioning or replay. This means that the ",Object(n.b)("inlineCode",{parentName:"p"},"$closure")," operation will always return the set of closure table entries for the given input concepts and does not store client state."),Object(n.b)("h2",null,"FHIRPath Terminology Functions"),Object(n.b)("p",null,"The FHIRPath module (",Object(n.b)("a",o({parentName:"p"},{href:"https://github.com/IBM/FHIR/tree/master/fhir-path"}),"fhir-path"),") has been updated to support implementations of the draft FHIRPath terminology function specification: ",Object(n.b)("a",o({parentName:"p"},{href:"http://hl7.org/fhir/fhirpath.html#txapi"}),"http://hl7.org/fhir/fhirpath.html#txapi"),". Support for the following functions (accessed through the ",Object(n.b)("inlineCode",{parentName:"p"},"%terminologies")," constant) has been implemented:"),Object(n.b)("pre",null,Object(n.b)("code",o({parentName:"pre"},{}),"%terminologies.expand(valueSet, params) : ValueSet\n%terminologies.lookup(coded, params) : Parameters\n%terminologies.validateVS(valueSet, coded, params) : Parameters\n%terminologies.validateCS(codeSystem, coded, params) : Parameters\n%terminologies.subsumes(system, coded1, coded2, params) : code\n%terminologies.translate(conceptMap, code, params) : Parameters\n")),Object(n.b)("p",null,"Here is the same example from above but going through the FHIRPath evaluator:"),Object(n.b)("pre",null,Object(n.b)("code",o({parentName:"pre"},{className:"language-java"}),'Coding coding = Coding.builder()\n        .system(Uri.of("http://ibm.com/fhir/CodeSystem/cs1"))\n        .version(string("1.0.0"))\n        .code(Code.of("a")\n        .display(string("concept a")\n        .build();\nCollection<FHIRPathNode> initialContext = singleton(FHIRPathElementNode.elementNode(coding));\nFHIRPathEvaluator evaluator = FHIRPathEvaluator.evaluator();\nCollection<FHIRPathNode> result = evaluator.evaluate("%terminologies.validateCode(\'http://ibm.com/fhir/ValueSet/vs1\', %context)");\n\n')),Object(n.b)("p",null,"Additionally, the FHIRPath functions ",Object(n.b)("inlineCode",{parentName:"p"},"subsumedBy")," and ",Object(n.b)("inlineCode",{parentName:"p"},"subsumes")," have been implemented per: ",Object(n.b)("a",o({parentName:"p"},{href:"http://hl7.org/fhir/fhirpath.html#functions"}),"http://hl7.org/fhir/fhirpath.html#functions")))}m.isMDXComponent=!0},393:function(e){e.exports={data:{site:{pathPrefix:"/FHIR"}}}},394:function(e){e.exports={data:{site:{siteMetadata:{repository:{baseUrl:"https://github.com/IBM/FHIR",subDirectory:"/docs",branch:"master"}}}}}}}]);
//# sourceMappingURL=component---src-pages-guides-fhir-terminology-guide-md-acb215653c8380903ca1.js.map