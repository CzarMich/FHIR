{"version":3,"sources":["webpack:///./src/pages/MAINTAINERS.md","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__","_extends","mdxType","id","parentName","align","isMDXComponent","PageHeader","_cx","title","_ref$tabs","tabs","core_browser_esm","className","cx","pageHeader","withTabs","length","text","EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","href","subDirectory","row","link","PageTabs","render","_this$props","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","replace","key","selectedItem","listItem","gatsby_browser_entry","to","tabsContainer","list","React","Component","Default","pageContext","children","location","_pageContext$frontmat","frontmatter","titleType","theme","description","keywords","pathPrefix","_2216853253","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","components_PageHeader","label","components_PageTabs","Main","padded","components_EditLink","NextPrevious","BackToTopBtn"],"mappings":"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","file":"component---src-pages-maintainers-md-f90cfdd4e18dd3f3e938.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/paulbastide/git/wffh/tmp/prb112/FHIR/docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"maintainers\"\n    }}>{`MAINTAINERS`}</h1>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Email`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`John Timm`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`johntimm`}{`@`}{`us.ibm.com`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Lee Surprenant`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`lmsurpre`}{`@`}{`us.ibm.com`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Robin Arnold`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Robin.Arnold23`}{`@`}{`ibm.com`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Albert (Xu) Wang`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`xuwang`}{`@`}{`us.ibm.com`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Paul Bastide`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`pbastide`}{`@`}{`us.ibm.com`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}