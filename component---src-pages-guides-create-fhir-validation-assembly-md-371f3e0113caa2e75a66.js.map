{"version":3,"sources":["webpack:///./src/pages/guides/CreateFHIRValidationAssembly.md","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__","_extends","mdxType","id","parentName","href","className","isMDXComponent","PageHeader","_cx","title","_ref$tabs","tabs","core_browser_esm","cx","pageHeader","withTabs","length","text","EditLink","relativePagePath","repositoryProp","repository","_688251530","data","site","siteMetadata","_ref2","baseUrl","subDirectory","branch","row","link","PageTabs","render","_this$props","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","gatsby_browser_entry","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","_pageContext$frontmat","frontmatter","titleType","theme","description","keywords","pathPrefix","_2216853253","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","components_PageHeader","label","components_PageTabs","Main","padded","components_EditLink","NextPrevious","BackToTopBtn"],"mappings":"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","file":"component---src-pages-guides-create-fhir-validation-assembly-md-371f3e0113caa2e75a66.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/paulbastide/git/wffh/tmp/prb112/FHIR/docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`The instructions below can be used to create an assembly than contains all the jar files needed for someone trying to validate FHIR R4 spec compliance of a FHIR resource instance. Useful when you have a FHIR resource that was not created from the model or was recevied from an external system.`}</p>\n    <h3 {...{\n      \"id\": \"pre-requisites\"\n    }}>{`Pre-Requisites`}</h3>\n    <p><strong parentName=\"p\">{`Repository`}</strong><br parentName=\"p\"></br>{`\n`}{`Navigate to `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR\"\n      }}>{`https://github.com/IBM/FHIR`}</a>{` `}</p>\n    <p>{`Open a terminal window `}</p>\n    <p>{`Clone to a local working directory\n`}<inlineCode parentName=\"p\">{`git clone git@github.com:IBM/FHIR.git`}</inlineCode></p>\n    <p>{`If you need to work off a specific tag release, please use `}<inlineCode parentName=\"p\">{`git checkout TAGVERSION`}</inlineCode>{` where TAGVERSION is the release you are interested in.  For instance, `}<inlineCode parentName=\"p\">{`git checkout 4.1.0`}</inlineCode>{` for the 4.1.0 release. You must update the pom.xml versions to the release tag version. `}</p>\n    <p><strong parentName=\"p\">{`Maven`}</strong><br parentName=\"p\"></br>{`\n`}{`You must have maven installed to create the build. `}<a parentName=\"p\" {...{\n        \"href\": \"https://maven.apache.org/\"\n      }}>{`https://maven.apache.org/`}</a>{`\nIt must be in the `}<inlineCode parentName=\"p\">{`PATH`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Dependencies`}</strong><br parentName=\"p\"></br>{`\n`}{`The `}<inlineCode parentName=\"p\">{`fhir-validation`}</inlineCode>{` module requires the `}<inlineCode parentName=\"p\">{`fhir-examples`}</inlineCode>{` be installed prior. `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` mvn clean install -f fhir-examples/ \n`}</code></pre>\n    <p>{`You should see `}<inlineCode parentName=\"p\">{`[INFO] BUILD SUCCESS`}</inlineCode>{`, and are ready to proceed.`}</p>\n    <p>{`This installs the examples which are part of the build. `}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`fhir-validation`}</inlineCode>{` module requires the `}<inlineCode parentName=\"p\">{`fhir-parent`}</inlineCode>{` be installed prior. `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` mvn clean install -f fhir-parent/ -DskipTests \n`}</code></pre>\n    <p>{`You should see `}<inlineCode parentName=\"p\">{`[INFO] BUILD SUCCESS`}</inlineCode>{`, and are ready to proceed.`}</p>\n    <p>{`This installs the modules which are part of the build.`}</p>\n    <h3 {...{\n      \"id\": \"build\"\n    }}>{`Build`}</h3>\n    <p>{` To create the distribution, you can run the following profile. `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`mvn clean package -f fhir-validation/ -Pfhir-validation-distribution\n`}</code></pre>\n    <p>{` It’ll create the following zip file - `}<inlineCode parentName=\"p\">{`fhir-validation/target/fhir-validation-distribution.zip`}</inlineCode>{` `}</p>\n    <p>{`You should see `}<inlineCode parentName=\"p\">{`[INFO] BUILD SUCCESS`}</inlineCode>{`, and the assembly is ready.`}</p>\n    <p>{`This file contains: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`14:05:17-paulbastide@pauls-mbp:~/git/wffh$ unzip -l ./tmp-fhir4/FHIR/fhir-validation/target/fhir-validation-distribution.zip\nArchive:  ./tmp-fhir4/FHIR/fhir-validation/target/fhir-validation-distribution.zip\n  Length      Date    Time    Name\n---------  ---------- -----   ----\n        0  10-18-2019 10:40   fhir-validation-dist/\n   302248  09-06-2019 15:58   fhir-validation-dist/antlr4-runtime-4.5.3.jar\n  6143682  10-17-2019 14:21   fhir-validation-dist/fhir-model-4.0.0-SNAPSHOT.jar\n 10307984  10-17-2019 14:21   fhir-validation-dist/fhir-registry-4.0.0-SNAPSHOT.jar\n    16922  10-17-2019 14:20   fhir-validation-dist/fhir-core-4.0.0-SNAPSHOT.jar\n   140564  09-06-2019 15:58   fhir-validation-dist/jakarta.json-1.1.5.jar\n    25058  09-11-2019 15:05   fhir-validation-dist/jakarta.annotation-api-1.3.5.jar\n     2254  09-13-2019 12:39   fhir-validation-dist/jcip-annotations-1.0.jar\n    21970  10-18-2019 10:40   fhir-validation-dist/fhir-validation-4.0.0-SNAPSHOT.jar\n---------                     -------\n 16960682                     9 files\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"adding-profiles-to-the-assembly\"\n    }}>{`Adding Profiles to the Assembly`}</h3>\n    <p>{` To create the distribution with a set of profiles and/or a single user profile, you add the following profiles to the build step. `}</p>\n    <ul>\n      <li parentName=\"ul\">{`fhir-ig-carin-bb`}</li>\n      <li parentName=\"ul\">{`fhir-ig-davinci-pdex-plan-net`}</li>\n      <li parentName=\"ul\">{`fhir-ig-mcode`}</li>\n      <li parentName=\"ul\">{`fhir-ig-us-core`}</li>\n      <li parentName=\"ul\">{`fhir-term - include the terminology module`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fhir-ig-user-defined`}</inlineCode>{` - A user defined profile `}</li>\n    </ul>\n    <p>{`If you chose to add the user defined profile, you must pass in the name of the dependency using a commandline parameter `}<inlineCode parentName=\"p\">{`-Dfhir-ig-user-defined=fhir-ig-example`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`mvn clean package -f fhir-validation/ -Pfhir-validation-distribution,fhir-ig-carin-bb,fhir-ig-davinci-pdex-plan-net,fhir-ig-mcode,fhir-ig-us-core,fhir-ig-user-defined\n`}</code></pre>\n    <p>{` It’ll create the following zip file - `}<inlineCode parentName=\"p\">{`fhir-validation/target/fhir-validation-distribution.zip`}</inlineCode>{` `}</p>\n    <p>{`You should see `}<inlineCode parentName=\"p\">{`[INFO] BUILD SUCCESS`}</inlineCode>{`, and the assembly is ready.`}</p>\n    <h1 {...{\n      \"id\": \"download-dependencies\"\n    }}>{`Download Dependencies`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`FHIR `}<a parentName=\"li\" {...{\n          \"href\": \"https://dl.bintray.com/ibm-watson-health/ibm-fhir-server-snapshots/com/ibm/fhir\"\n        }}>{`Download from BinTray`}</a></li>\n      <li parentName=\"ul\">{`Antlr `}<a parentName=\"li\" {...{\n          \"href\": \"https://repo1.maven.org/maven2/org/antlr/antlr4-runtime/4.5.3/\"\n        }}>{`Antlr`}</a></li>\n      <li parentName=\"ul\">{`Json `}<a parentName=\"li\" {...{\n          \"href\": \"https://repo1.maven.org/maven2/jakarta/json/jakarta.json-api/1.1.5/\"\n        }}>{`https://repo1.maven.org/maven2/jakarta/json/jakarta.json-api/1.1.5/`}</a></li>\n      <li parentName=\"ul\">{`Annotations `}<a parentName=\"li\" {...{\n          \"href\": \"https://repo1.maven.org/maven2/jakarta/annotation/jakarta.annotation-api/\"\n        }}>{`https://repo1.maven.org/maven2/jakarta/annotation/jakarta.annotation-api/`}</a></li>\n      <li parentName=\"ul\">{`JCIP `}<a parentName=\"li\" {...{\n          \"href\": \"https://repo1.maven.org/maven2/net/jcip/jcip-annotations/1.0/\"\n        }}>{`https://repo1.maven.org/maven2/net/jcip/jcip-annotations/1.0/`}</a></li>\n    </ul>\n    <p>\nFHIR® is the registered trademark of HL7 and is used with the permission of HL7.\n    </p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const currentTabRegex = new RegExp(`${currentTab}(?!-)`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}